// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ===========================================================================
// Inventory
// ===========================================================================
model Inventory {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  partsNumber String @unique
  particular String @unique
  quantity Int
  codes String
  srp Float?
  description String?

  uom Uom @relation(fields: [uomID], references: [id])
  uomID String

  applications Application[]
  sizes Size[]
  brands Brand[]
  suppliers Supplier[]

  // others
  variants Variant[]
  soldItems SoldItem[]
}

model Variant {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique

  inventory Inventory @relation(fields: [inventoryID], references: [id])
  inventoryID String

  size Size @relation(fields: [sizeID], references: [id])
  sizeID String

  brand Brand @relation(fields: [brandID], references: [id])
  brandID String

  supplier Supplier @relation(fields: [supplierID], references: [id])
  supplierID String

  stockIn StockIn[]
}

// ===========================================================================
// Stock In
// ===========================================================================
model StockIn {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  referenceNumber String
  referenceDate DateTime
  receivedBy String
  checkedBy String
  codedBy String
  remarks String?
  items Variant[]

  supplier Supplier @relation(fields: [supplierID], references: [id])
  supplierID String
}

// ===========================================================================
// Supplier
// ===========================================================================
model Supplier {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  entry DateTime @default(now())
  initials String @unique
  vendor String
  terms Int
  owner String?
  tin String?
  representative String?
  address String?

  // brands
  brands Brand[]

  // items
  items Inventory[]

  // phoneNumbers
  companyPhoneNumbers CompanyPhoneNumber[]
  representativePhoneNumbers RepresentativePhoneNumber[]

  // emails
  emails Email[]

  // po
  purchaseOrders PurchaseOrder[]
}

// ===========================================================================
// Sales Report
// ===========================================================================
model SalesReport {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String
  tin String?
  siNumber String?
  arsNumber String?
  drNumber String?
  crsNumber String?
  address String?
  chequeNumber String?
  chequeDate DateTime?
  discount Float?
  amount Float?

  // type
  type SalesType @relation(fields: [typeID], references: [id])
  typeID String

  // salesStaff
  salesStaff SalesStaff[]

  // paymentType
  paymentType PaymentType? @relation(fields: [paymentTypeID], references: [id])
  paymentTypeID String?

  // bank
  bank Bank? @relation(fields: [bankID], references: [id])
  bankID String?

  // soldItems
  soldItems SoldItem[]
}

// ===========================================================================
// Purchase Order
// ===========================================================================
model PurchaseOrder {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  supplier Supplier? @relation(fields: [supplierID], references: [id])
  supplierID String?
  items POItem[]
}

// ===========================================================================
// Helpers
// ===========================================================================
model Size {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  item Inventory[]
}

model Application {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  item Inventory[]
}

model Brand {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  item Inventory[]
  supplier Supplier?
}

model Uom {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  item Inventory[]
}

model Code {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  value Float
}

model CompanyPhoneNumber {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  phoneNumber String
  suppliers Supplier[]
}

model RepresentativePhoneNumber {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  phoneNumber String
  suppliers Supplier[]
}

model Email {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  email String
  suppliers Supplier[]
}

model SalesStaff {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  salesReports SalesReport[]
}

model PaymentType {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  salesReports SalesReport[]
}

model Bank {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  salesReports SalesReport[]
}

model SalesType {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  name String @unique
  salesReports SalesReport[]
}

model SoldItem {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  quantity Int
  item Variant? @relation(fields: [itemID], references: [id])
  itemID String?
  salesReports SalesReport[]
}

model POItem {
  id String @id @default(uuid())
  dateCreated DateTime @default(now())
  quantity Int
  item Variant? @relation(fields: [itemID], references: [id])
  itemID String?
  purchaseOrders PurchaseOrder[]
}
